continue
current_user.receiver
Transaction.current_scope
Transaction.current_user
@receiver_account
current_user
continue
current_user.account.transactions.current_receiver
current_user.account.transactions.current
current_user.account.transactions.last
current_user.account.transactions.receiver
current_user.account.transactions
current_user.account.transaction
current_user.account.last
current_user.account
current_user.receiver_id
current_user.account.receiver
current_user.receiver
current_user
continue
current_user.account.receiver_id
current_user.account.receiver
current_user.account.transaction
current_user.account
current_user.receiver
current_user
Account.receiver
 @account
@sample
continue
current_user.account.balance
current_user.account
current_user
continue
@transaction =Transaction.new(transaction_params)
continue
@transaction =Transaction.new(transaction_params)
continue
 update_receiver_data = @receiver_account.update(balance:  @receiver_account.balance + params[:transaction][:amount].to_i)
@receiver_account = Transaction.receiver
update_sender_data = @account.update(balance: @account.balance - params[:transaction][:amount].to_i)
@account = current_user.account
@receiver_account = Transaction.receiver
continue
current_user.account
current_user
continue
current_user
continue
 update_receiver_data = @receiver_account.update(balance:  @receiver_account.balance + params[:transaction][:amount].to_i)
@receiver_account = Transaction.last.receiver
n
@receiver_account = Transaction.last.receiver
update_sender_data = @account.update(balance: @account.balance - params[:transaction][:amount].to_i)
update_sender_data
@account = current_user.account
continue
bal = trans.balance
trans = transaction.receiver
transaction = Transaction.last
continue
@transaction = Transaction.new(transaction_params)
 params.require(:transaction).permit(:amount ,:sender_id ,:receiver_id).with_defaults(account_id: current_user.account.id)
continue
current_user.account
receiver_id
receiver.account.id
receiver.account
receiver
current_user.account.id
@transaction = Transaction.new(transaction_params)
continue
 @transaction = Transaction.new(transaction_params)
continue
@transaction = Transaction.new(transaction_params)
receiver
continue
@transaction = Transaction.new(transaction_params)
continue
@transaction = Transaction.new 
receiver_id
receiver.balance
receiver.account
/home/acer/bankingapp/tmp/pids/server.pid
c
Transaction.last.receiver
Transaction.last.receiver_id
Transaction.last.reciver
Transaction.last
 params.require(:transaction).permit(:receiver_id)
continue
@account = current_user.account
c
n
c
@account.account.balance + params[:transaction][:amount].to_i
@account.account.balance + params[:transaction][:amount]
params[:transaction][:amount]
params[:transaction]
params
@account.account.balance
@account.account.balance + params[:amount]
update_data = @account.update(balance: @account.account.balance + params[:amount])
@account.account.balance
@account
@account.balance
@account.balance + params[:amount]
@account.update(balance: @account.balance + params[:amount])
current_user.account.save
current_user.account.balance.save
current_user.account.balance+20
current_user.account.balance
current_user.account.save
current_user.account.balance+20
current_user.account.balance
current_user.account
update_data = @account.update(balance: @account.balance + params[:amount])
update_data
current_user
@account
continue
c
value
sender_id
n
current_user.account.id
continue
@transaction = Transaction.new(transaction_params)
continue
 @transaction = Transaction.new(transaction_params)
continue
@transaction.account.balance + params[:amount]
@transaction = Transaction.new(transaction_params)
continue
 @transaction.account.balance + amount
@transaction = Transaction.new(transaction_params)
continue
@transaction = Transaction.new(transaction_params)
continue
@transaction = Transaction.new(transaction_params)
continue
 @transaction = Transaction.new(transaction_params)
continue
current_user.id
form.hidden_field :sender_id, value: current_user.id
continue
@transaction = Transaction.new(transaction_params)
continue
transactions.account.balance + amount
transaction.account.balance + amount
Transaction.new(transaction_params)
continue
amount
continue
@transaction = Transaction.new(transaction_params)
continue
current_user.i
current_user.id
 current_user
c
current_user
continue
@transaction = Transaction.new(transaction_params)
c
\c
c
transaction_params
params
@transaction = Transaction.new(transaction_params)
current_user.account=
current_user.account_id
current_cycle
current_accountf
current_user.account
current_user
current_account
current_user
current_user.account.balance
current_user.account
current_user.account_id
continue
current_user
continue
current_user
continue
current_user
 Account.new(set_account_params)
